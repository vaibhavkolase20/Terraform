provider "aws" {
  region = "us-east-1"
}

# Create VPC
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"

  tags = {
    Name = "MyVPC"
  }
}

# Create Subnet
resource "aws_subnet" "my_subnet" {
  vpc_id                  = aws_vpc.my_vpc.id
  cidr_block              = "10.0.1.0/24"
  map_public_ip_on_launch = true

  tags = {
    Name = "MySubnet"
  }
}

# Create Security Group
resource "aws_security_group" "my_sg" {
  vpc_id = aws_vpc.my_vpc.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "MySecurityGroup"
  }
}

# Create Key Pair
resource "aws_key_pair" "my_key" {
  key_name   = "Rhohit.key"
  public_key = file("${path.module}/MyKey.pub")
}

# List of unique instance names
variable "instance_names" {
  type    = list(string)
  default = ["terraform-test", "instance3", "kubernative3", "dev-server", "test-server", "prod-server", "app-server", "web-server", "db-server", "monitoring-server"]
}

# Create EC2 Instances with Unique Names
resource "aws_instance" "my_instances" {
  for_each               = toset(var.instance_names)
  ami                    = "ami-04b4f1a9cf54c11d0"
  instance_type          = "t2.micro"
  subnet_id              = aws_subnet.my_subnet.id
  vpc_security_group_ids = [aws_security_group.my_sg.id]
  key_name               = aws_key_pair.my_key.key_name

  tags = {
    Name = each.key
  }
}

after this code use this command for creting the key pair
ssh-keygen -t rsa -b 2048 -f MyKey

